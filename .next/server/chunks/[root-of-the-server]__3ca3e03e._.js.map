{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file:///Users/tejaskamble/Desktop/OwnGigs/agency/lib/mongodb.ts"],"sourcesContent":["import { MongoClient } from 'mongodb'\n\ndeclare global {\n  // allow global cache across hot-reloads in dev\n  // eslint-disable-next-line no-var\n  var _mongoClientPromise: Promise<MongoClient> | undefined\n}\n\nif (!process.env.MONGODB_URI) {\n  throw new Error('Please add MONGODB_URI to your .env.local')\n}\n\nconst uri = process.env.MONGODB_URI\nconst options = {}\n\nlet client = new MongoClient(uri, options)\nlet clientPromise: Promise<MongoClient>\n\nif (process.env.NODE_ENV === 'development') {\n  if (!global._mongoClientPromise) {\n    global._mongoClientPromise = client.connect()\n  }\n  clientPromise = global._mongoClientPromise\n} else {\n  clientPromise = client.connect()\n}\n\nexport default clientPromise"],"names":[],"mappings":";;;;AAAA;;AAQA,IAAI,CAAC,QAAQ,GAAG,CAAC,WAAW,EAAE;IAC5B,MAAM,IAAI,MAAM;AAClB;AAEA,MAAM,MAAM,QAAQ,GAAG,CAAC,WAAW;AACnC,MAAM,UAAU,CAAC;AAEjB,IAAI,SAAS,IAAI,sHAAW,CAAC,KAAK;AAClC,IAAI;AAEJ,wCAA4C;IAC1C,IAAI,CAAC,OAAO,mBAAmB,EAAE;QAC/B,OAAO,mBAAmB,GAAG,OAAO,OAAO;IAC7C;IACA,gBAAgB,OAAO,mBAAmB;AAC5C;;uCAIe","debugId":null}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":["file:///Users/tejaskamble/Desktop/OwnGigs/agency/app/api/contacts/route.ts"],"sourcesContent":["import clientPromise from '@/lib/mongodb'\nimport { NextResponse } from 'next/server'\n\nexport async function POST(req: Request) {\n  try {\n    const body = await req.json()\n    const { name, email, videoType, message } = body\n\n     // email and name require \n    if (!name || !email) {\n      return NextResponse.json({ success: false, error: 'Name and email are required' }, { status: 400 })\n    }\n\n    const client = await clientPromise\n    const db = client.db()\n    const contacts = db.collection('contacts')\n\n    const doc = {\n      name,\n      email,\n      videoType: videoType ?? '',\n      message: message ?? '',\n      createdAt: new Date(),\n    }\n\n    await contacts.insertOne(doc)\n\n    return NextResponse.json({ success: true }, { status: 201 })\n  } catch (err) {\n    console.error('API /api/contacts error:', err)\n    return NextResponse.json({ success: false, error: 'Server error' }, { status: 500 })\n  }\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG;QAE3C,0BAA0B;QAC3B,IAAI,CAAC,QAAQ,CAAC,OAAO;YACnB,OAAO,gLAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;gBAAO,OAAO;YAA8B,GAAG;gBAAE,QAAQ;YAAI;QACnG;QAEA,MAAM,SAAS,MAAM,2JAAa;QAClC,MAAM,KAAK,OAAO,EAAE;QACpB,MAAM,WAAW,GAAG,UAAU,CAAC;QAE/B,MAAM,MAAM;YACV;YACA;YACA,WAAW,aAAa;YACxB,SAAS,WAAW;YACpB,WAAW,IAAI;QACjB;QAEA,MAAM,SAAS,SAAS,CAAC;QAEzB,OAAO,gLAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAK,GAAG;YAAE,QAAQ;QAAI;IAC5D,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,gLAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,OAAO;QAAe,GAAG;YAAE,QAAQ;QAAI;IACpF;AACF","debugId":null}}]
}